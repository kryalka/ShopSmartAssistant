import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)


# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞
async def start(update: Update, context: CallbackContext) -> None:
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("üçé –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data='basket')],
        [InlineKeyboardButton("üç≥ –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", callback_data='recipe')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–Ø ‚Äî –≤–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç:\n"
        "- üõí –°–æ—Å—Ç–∞–≤–∏—Ç—å —É–¥–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫.\n"
        "- ü•ó –°–æ–∑–¥–∞—Ç—å –≤–∫—É—Å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.\n\n", reply_markup=reply_markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –º–µ–Ω—é BotFather
async def shopping(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /shopping"""
    await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏: –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É. –ö–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤–∞–º –Ω—É–∂–Ω—ã?")


async def recipe(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /recipe"""
    await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏: –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç. –ò–∑ –∫–∞–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±–ª—é–¥–æ?")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'basket':
        # –ë–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –æ–Ω —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
        await query.edit_message_text(text="–í—ã –≤—ã–±—Ä–∞–ª–∏: –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É. –ö–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤–∞–º –Ω—É–∂–Ω—ã?")

    elif query.data == 'recipe':
        # –ë–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞
        await query.edit_message_text(text="–í—ã –≤—ã–±—Ä–∞–ª–∏: –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç. –ò–∑ –∫–∞–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±–ª—é–¥–æ?")

    else:
        await query.edit_message_text(text="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä.")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main() -> None:
    token = '7762120638:AAEn-KaM6kWue3UZVqNMtHz8VrChQGeRIO0'

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤–º–µ—Å—Ç–æ Updater)
    application = Application.builder().token(token).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("shopping", shopping))
    application.add_handler(CommandHandler("recipe", recipe))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
    application.add_handler(CallbackQueryHandler(button))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()


if __name__ == '__main__':
    main()
